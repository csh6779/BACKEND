// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RigidboysAPI.Data;

#nullable disable

namespace RigidboysAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250615172658_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RigidboysAPI.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext")
                        .HasColumnName("Address");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("Master_Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Master_Name");

                    b.Property<string>("Office_Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Office_Name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Phone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.HasIndex("Office_Name")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RigidboysAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Category");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("License")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("License");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Product_Name");

                    b.Property<int?>("Product_price")
                        .HasColumnType("int")
                        .HasColumnName("Product_price");

                    b.Property<int?>("Production_price")
                        .HasColumnType("int")
                        .HasColumnName("Production_price");

                    b.HasKey("Id");

                    b.HasIndex("Product_Name")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RigidboysAPI.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Customer_Name");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<bool?>("Is_Payment")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Is_Payment");

                    b.Property<int?>("Paid_Payment")
                        .HasColumnType("int")
                        .HasColumnName("Paid_Payment");

                    b.Property<DateTime?>("Payment_Period_Deadline")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Payment_Period_Deadline");

                    b.Property<DateTime?>("Payment_Period_End")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Payment_Period_End");

                    b.Property<DateTime?>("Payment_Period_Start")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Payment_Period_Start");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Product_Name");

                    b.Property<int?>("Purchase_Amount")
                        .HasColumnType("int")
                        .HasColumnName("Purchase_Amount");

                    b.Property<int?>("Purchase_Price")
                        .HasColumnType("int")
                        .HasColumnName("Purchase_Price");

                    b.Property<string>("Purchase_or_Sale")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Purchase_or_Sale");

                    b.Property<DateTime?>("Purchased_Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Purchased_Date");

                    b.Property<string>("Seller_Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Seller_Name");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Name", "Purchased_Date", "Product_Name")
                        .IsUnique();

                    b.ToTable("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
